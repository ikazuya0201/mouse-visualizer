{"version":3,"sources":["Canvas.tsx","fetch.ts","input.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Canvas","props","canvasRef","useRef","maze_string","walls","Set","lines","split","mazeWidth","Math","floor","length","forEach","line","i","j","add","JSON","stringify","x","y","dir","parseMazeString","mazeString","squareWidthPixel","origin","squareRatio","canvasWidth","canvasHeight","useEffect","canvas","current","ctx","getContext","clearRect","width","height","wall","pos","parse","beginPath","moveTo","lineTo","stroke","closePath","undefined","results","index","value","state","theta","leftBottom","rightBottom","front","right","left","cos","PI","sin","positions","trans","rot","rotation","intoPixel","src","dst","drawRobot","halfSquareWidthPixel","fillText","toString","save","style","border","className","ref","onClick","event","rect","target","getBoundingClientRect","clientX","clientY","top","xquo","yquo","xrem","yrem","cands","sort","a","b","wallStr","has","delete","setMazeString","hasWall","push","up","res","intoMazeString","input","wasm","simulator","Simulator","new","Promise","resolve","rejected","setTimeout","batchResults","simulate_one_step","err","concat","console","log","defaultInput","config","start","direction","return_goal","goals","search_initial_route","search_final_route","estimator_cut_off_frequency","period","translational_kp","translational_ki","translational_kd","translational_model_gain","translational_model_time_constant","rotational_kp","rotational_ki","rotational_kd","rotational_model_gain","rotational_model_time_constant","kx","kdx","ky","kdy","valid_control_lower_bound","low_zeta","low_b","fail_safe_distance","search_velocity","max_velocity","max_acceleration","max_jerk","spin_angular_velocity","spin_angular_acceleration","spin_angular_jerk","run_slalom_velocity","current_node","robot_state","v","Directions","inputSchema","type","title","properties","enum","required","items","FieldTemplate","TreeItem","nodeId","id","label","children","ObjectFieldTemplate","map","prop","content","ArrayFieldTemplate","p","Grid","container","alignItems","item","xs","IconButton","tabIndex","onDropIndexClick","Delete","key","onAddClick","Add","widgets","TextareaWidget","TextareaAutosize","defaultValue","onChange","TextWidget","TextField","SelectWidget","Select","options","enumOptions","MenuItem","uiSchema","InputForm","TreeView","defaultCollapseIcon","ExpandMore","defaultExpandIcon","ChevronRight","schema","formData","onSubmit","drawerWidth","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","nested","paddingLeft","App","classes","useTheme","React","useState","open","setOpen","setInput","setValue","isPlaying","setPlaying","result","setResult","speeds","speedIndex","setSpeedIndex","isLoading","setLoading","interval","setInterval","min","clearInterval","CssBaseline","AppBar","position","clsx","color","Toolbar","aria-label","edge","Menu","Container","maxWidth","Typography","variant","noWrap","Slider","_event","newValue","FastRewind","Stop","PlayArrow","FastForward","Replay","Drawer","anchor","paper","ChevronLeft","fetchResult","then","catch","error","justify","loaded","zIndex","newMazeString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c965a522.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Result } from \"./fetch\";\n\ninterface Props {\n  results?: Array<Result>;\n  value: number;\n  mazeString: string;\n  setMazeString: (mazeString: string) => void;\n}\n\n//Left-bottom position of the maze is the origin.\ninterface WallPosition {\n  x: number;\n  y: number;\n  dir: \"up\" | \"right\";\n}\n\nfunction parseMazeString(maze_string: string): [Set<string>, number] {\n  const walls = new Set<string>();\n  const lines = maze_string.split(\"\\n\");\n  const mazeWidth = Math.floor(lines.length / 2);\n  lines.forEach((line, i) => {\n    for (let j = 0; j < line.length; j++) {\n      if (i % 2 === 0) {\n        if (j % 4 === 1 && line[j] === \"-\") {\n          walls.add(\n            JSON.stringify({\n              x: Math.floor(j / 4),\n              y: mazeWidth - Math.floor(i / 2) - 1,\n              dir: \"up\",\n            })\n          );\n        }\n      } else {\n        if (j % 4 === 0 && line[j] === \"|\") {\n          walls.add(\n            JSON.stringify({\n              x: Math.floor(j / 4) - 1,\n              y: mazeWidth - Math.floor(i / 2) - 1,\n              dir: \"right\",\n            })\n          );\n        }\n      }\n    }\n  });\n  return [walls, mazeWidth];\n}\n\nfunction intoMazeString(walls: Set<string>, mazeWidth: number): string {\n  const hasWall: Array<Array<{ right: boolean; up: boolean }>> = [];\n  for (let x = 0; x < mazeWidth; x++) {\n    hasWall.push([]);\n    for (let y = 0; y < mazeWidth; y++) {\n      hasWall[x].push({ up: false, right: false });\n    }\n  }\n  walls.forEach((wallStr) => {\n    const wall: WallPosition = JSON.parse(wallStr);\n    if (\n      wall.x < 0 ||\n      wall.y < 0 ||\n      wall.x >= mazeWidth ||\n      wall.y >= mazeWidth\n    ) {\n      return;\n    }\n    if (wall.dir === \"up\") {\n      hasWall[wall.x][wall.y].up = true;\n    } else {\n      hasWall[wall.x][wall.y].right = true;\n    }\n  });\n\n  let res = \"\";\n  for (let y = 0; y < mazeWidth; y++) {\n    for (let x = 0; x < mazeWidth; x++) {\n      if (hasWall[x][mazeWidth - y - 1].up) {\n        res += \"+---\";\n      } else {\n        res += \"+   \";\n      }\n    }\n    res += \"+\\n|\";\n    for (let x = 0; x < mazeWidth; x++) {\n      if (hasWall[x][mazeWidth - y - 1].right) {\n        res += \"   |\";\n      } else {\n        res += \"    \";\n      }\n    }\n    res += \"\\n\";\n  }\n  for (let x = 0; x < mazeWidth; x++) {\n    res += \"+---\";\n  }\n  res += \"+\";\n  return res;\n}\n\nexport default function Canvas(props: Props) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [walls, mazeWidth] = parseMazeString(props.mazeString);\n  const squareWidthPixel = 50;\n  const origin = [100, 100 + mazeWidth * squareWidthPixel];\n  const squareWidthMeter = 0.09;\n  const squareRatio = squareWidthPixel / squareWidthMeter;\n  const canvasWidth = mazeWidth * squareWidthPixel + 200;\n  const canvasHeight = mazeWidth * squareWidthPixel + 200;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas === null) {\n      return;\n    }\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx === null) {\n      return;\n    }\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const drawWall = (pos: WallPosition) => {\n      ctx.beginPath();\n      if (pos.dir === \"up\") {\n        ctx.moveTo(\n          origin[0] + pos.x * squareWidthPixel,\n          origin[1] - (pos.y + 1) * squareWidthPixel\n        );\n        ctx.lineTo(\n          origin[0] + (pos.x + 1) * squareWidthPixel,\n          origin[1] - (pos.y + 1) * squareWidthPixel\n        );\n        ctx.stroke();\n      } else {\n        ctx.moveTo(\n          origin[0] + (pos.x + 1) * squareWidthPixel,\n          origin[1] - pos.y * squareWidthPixel\n        );\n        ctx.lineTo(\n          origin[0] + (pos.x + 1) * squareWidthPixel,\n          origin[1] - (pos.y + 1) * squareWidthPixel\n        );\n        ctx.stroke();\n      }\n      ctx.closePath();\n    };\n\n    const drawRobot = (x: number, y: number, theta: number) => {\n      const width = 0.037;\n      const backLength = 0.024;\n      const frontLength = 0.026;\n      const leftBottom = [-width / 2.0, -backLength];\n      const rightBottom = [width / 2.0, -backLength];\n      const front = [0, frontLength];\n      const right = [width / 2.0, 0.006];\n      const left = [-width / 2.0, 0.006];\n      const cos = Math.cos(theta - Math.PI / 2.0);\n      const sin = Math.sin(theta - Math.PI / 2.0);\n      const positions = [\n        leftBottom,\n        rightBottom,\n        right,\n        front,\n        left,\n        leftBottom,\n      ];\n      const rotation = (pos: Array<number>) => {\n        return [pos[0] * cos - pos[1] * sin, pos[0] * sin + pos[1] * cos];\n      };\n      const trans = (pos: Array<number>) => {\n        const rot = rotation(pos);\n        return [x + rot[0], y + rot[1]];\n      };\n      const intoPixel = (pos: Array<number>) => {\n        return [\n          origin[0] + pos[0] * squareRatio,\n          origin[1] - pos[1] * squareRatio,\n        ];\n      };\n      ctx.beginPath();\n      for (let i = 0; i < positions.length - 1; i++) {\n        const src = intoPixel(trans(positions[i]));\n        const dst = intoPixel(trans(positions[i + 1]));\n        ctx.moveTo(src[0], src[1]);\n        ctx.lineTo(dst[0], dst[1]);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    };\n\n    walls.forEach((wall) => drawWall(JSON.parse(wall)));\n\n    if (props.results !== undefined) {\n      const index = Math.floor((props.value * props.results.length) / 100);\n      if (index < props.results.length) {\n        const state = props.results[index];\n        drawRobot(state.x.x, state.y.x, state.theta.x);\n      }\n    }\n\n    for (let i = 0; i < 2 * mazeWidth; i++) {\n      const halfSquareWidthPixel = squareWidthPixel / 2;\n      const margin = 5;\n\n      // lower\n      ctx.fillText(\n        i.toString(),\n        origin[0] + (i + 1) * halfSquareWidthPixel - margin,\n        origin[1] + halfSquareWidthPixel\n      );\n\n      // upper\n      ctx.fillText(\n        i.toString(),\n        origin[0] + (i + 1) * halfSquareWidthPixel - margin,\n        origin[1] - squareWidthPixel * mazeWidth - halfSquareWidthPixel + margin\n      );\n\n      // left\n      ctx.fillText(\n        i.toString(),\n        origin[0] - halfSquareWidthPixel,\n        origin[1] - (i + 1) * halfSquareWidthPixel + margin\n      );\n\n      // right\n      ctx.fillText(\n        i.toString(),\n        origin[0] +\n          squareWidthPixel * mazeWidth +\n          halfSquareWidthPixel -\n          margin,\n        origin[1] - (i + 1) * halfSquareWidthPixel + margin\n      );\n    }\n\n    ctx.save();\n  });\n\n  const onClick = (event: any) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left - origin[0];\n    const y = origin[1] - (event.clientY - rect.top);\n    const xquo = Math.floor(x / squareWidthPixel);\n    const yquo = Math.floor(y / squareWidthPixel);\n    const xrem = x % squareWidthPixel;\n    const yrem = y % squareWidthPixel;\n    const cands = [\n      [xrem, \"left\"],\n      [squareWidthPixel - xrem, \"right\"],\n      [yrem, \"bottom\"],\n      [squareWidthPixel - yrem, \"top\"],\n    ];\n    cands.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n    const dir = cands[0][1];\n    const wall = ((): WallPosition | undefined => {\n      switch (dir) {\n        case \"right\":\n          return {\n            x: xquo,\n            y: yquo,\n            dir: \"right\",\n          };\n        case \"top\":\n          return {\n            x: xquo,\n            y: yquo,\n            dir: \"up\",\n          };\n        case \"left\":\n          if (xquo === 0) {\n            return undefined;\n          } else {\n            return {\n              x: xquo - 1,\n              y: yquo,\n              dir: \"right\",\n            };\n          }\n        case \"bottom\":\n          if (yquo == 0) {\n            return undefined;\n          } else {\n            return {\n              x: xquo,\n              y: yquo - 1,\n              dir: \"up\",\n            };\n          }\n        default:\n          return undefined;\n      }\n    })();\n    if (wall === undefined) {\n      return;\n    }\n    const wallStr = JSON.stringify(wall);\n    if (walls.has(wallStr)) {\n      walls.delete(wallStr);\n    } else {\n      walls.add(wallStr);\n    }\n    props.setMazeString(intoMazeString(walls, mazeWidth));\n  };\n\n  return (\n    <div>\n      <canvas\n        width={canvasWidth}\n        height={canvasHeight}\n        style={{\n          border: \"1px solid #ddd\",\n        }}\n        className=\"canvas\"\n        ref={canvasRef}\n        onClick={onClick}\n      />\n    </div>\n  );\n}\n","import { Input } from \"./input\";\n\nexport interface Result {\n  x: {\n    x: number;\n  };\n  y: {\n    x: number;\n  };\n  theta: {\n    x: number;\n  };\n}\n\nexport default async function fetchResult(\n  input: Input\n): Promise<Array<Result>> {\n  const wasm = await import(\"wasm\");\n  const simulator = wasm.Simulator.new(JSON.stringify(input));\n  let results: Array<Result> = [];\n  for (;;) {\n    try {\n      const batchResults: Array<Result> = await new Promise(\n        (resolve, rejected) => {\n          setTimeout(() => {\n            const batchResults: Array<Result> = [];\n            try {\n              for (let i = 0; i < 300; i++) {\n                batchResults.push(JSON.parse(simulator.simulate_one_step()));\n              }\n            } catch (err) {\n              rejected(err);\n            }\n            resolve(batchResults);\n          });\n        }\n      );\n      results = results.concat(batchResults);\n    } catch (err) {\n      console.log(err);\n      break;\n    }\n  }\n  return results;\n}\n","import React from \"react\";\nimport { ISubmitEvent } from \"@rjsf/core\";\nimport Form from \"@rjsf/material-ui\";\nimport {\n  WidgetProps,\n  ObjectFieldTemplateProps,\n  FieldTemplateProps,\n  ArrayFieldTemplateProps,\n} from \"@rjsf/core\";\nimport { JSONSchema7 } from \"json-schema\";\nimport {\n  List,\n  ListItem,\n  Paper,\n  IconButton,\n  TextareaAutosize,\n  TextField,\n  Select,\n  MenuItem,\n  Grid,\n  Box,\n} from \"@material-ui/core\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport { ExpandMore, ChevronRight, Add, Delete } from \"@material-ui/icons\";\n\nexport type Direction =\n  | \"North\"\n  | \"NorthEast\"\n  | \"East\"\n  | \"SouthEast\"\n  | \"South\"\n  | \"SouthWest\"\n  | \"West\"\n  | \"NorthWest\";\n\nexport interface Input {\n  config: {\n    start: {\n      x: number;\n      y: number;\n      direction: Direction;\n    };\n    return_goal: {\n      x: number;\n      y: number;\n      direction: Direction;\n    };\n    goals: Array<{\n      x: number;\n      y: number;\n      direction: Direction;\n    }>;\n    search_initial_route: \"Init\";\n    search_final_route: \"Final\";\n    estimator_cut_off_frequency: number;\n    period: number;\n    translational_kp: number;\n    translational_ki: number;\n    translational_kd: number;\n    translational_model_gain: number;\n    translational_model_time_constant: number;\n    rotational_kp: number;\n    rotational_ki: number;\n    rotational_kd: number;\n    rotational_model_gain: number;\n    rotational_model_time_constant: number;\n    kx: number;\n    kdx: number;\n    ky: number;\n    kdy: number;\n    valid_control_lower_bound: number;\n    low_zeta: number;\n    low_b: number;\n    fail_safe_distance: number;\n    search_velocity: number;\n    max_velocity: number;\n    max_acceleration: number;\n    max_jerk: number;\n    spin_angular_velocity: number;\n    spin_angular_acceleration: number;\n    spin_angular_jerk: number;\n    run_slalom_velocity: number;\n  };\n  state: {\n    current_node: {\n      x: number;\n      y: number;\n      direction: Direction;\n    };\n    robot_state: {\n      x: {\n        x: number;\n        v: number;\n        a: number;\n        j: number;\n      };\n      y: {\n        x: number;\n        v: number;\n        a: number;\n        j: number;\n      };\n      theta: {\n        x: number;\n        v: number;\n        a: number;\n        j: number;\n      };\n    };\n  };\n  maze_string: string;\n}\n\nexport const defaultInput: Input = {\n  config: {\n    start: {\n      x: 0,\n      y: 0,\n      direction: \"North\",\n    },\n    return_goal: {\n      x: 0,\n      y: 0,\n      direction: \"South\",\n    },\n    goals: [\n      {\n        x: 15,\n        y: 14,\n        direction: \"SouthWest\",\n      },\n      {\n        x: 15,\n        y: 14,\n        direction: \"SouthEast\",\n      },\n      {\n        x: 15,\n        y: 16,\n        direction: \"NorthWest\",\n      },\n      {\n        x: 15,\n        y: 16,\n        direction: \"NorthEast\",\n      },\n    ],\n    search_initial_route: \"Init\",\n    search_final_route: \"Final\",\n    estimator_cut_off_frequency: 50.0,\n    period: 0.001,\n    translational_kp: 1.0,\n    translational_ki: 0.05,\n    translational_kd: 0.01,\n    translational_model_gain: 1.0,\n    translational_model_time_constant: 0.3694,\n    rotational_kp: 1.0,\n    rotational_ki: 0.2,\n    rotational_kd: 0.0,\n    rotational_model_gain: 10.0,\n    rotational_model_time_constant: 0.1499,\n    kx: 40.0,\n    kdx: 4.0,\n    ky: 40.0,\n    kdy: 4.0,\n    valid_control_lower_bound: 0.03,\n    low_zeta: 1.0,\n    low_b: 1e-3,\n    fail_safe_distance: 0.05,\n    search_velocity: 0.3,\n    max_velocity: 1.0,\n    max_acceleration: 50.0,\n    max_jerk: 100.0,\n    spin_angular_velocity: 3.141592653589793,\n    spin_angular_acceleration: 31.41592653589793,\n    spin_angular_jerk: 125.66370614359172,\n    run_slalom_velocity: 0.5,\n  },\n  state: {\n    current_node: {\n      x: 0,\n      y: 0,\n      direction: \"North\",\n    },\n    robot_state: {\n      x: {\n        x: 0.045,\n        v: 0,\n        a: 0,\n        j: 0,\n      },\n      y: {\n        x: 0.045,\n        v: 0,\n        a: 0,\n        j: 0,\n      },\n      theta: {\n        x: 1.5707963267948966,\n        v: 0,\n        a: 0,\n        j: 0,\n      },\n    },\n  },\n  maze_string: `+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n|                           |   |   |                           |\n+   +---+---+---+   +---+   +---+---+   +---+   +---+---+---+   +\n|   |           |   |                       |   |           |   |\n+   +---+---+   +   +   +---+---+---+---+   +   +   +---+---+   +\n|           |   |   |                       |   |   |           |\n+   +---+   +---+   +---+---+---+---+---+---+   +---+   +---+   +\n|   |   |   |   |           |       |           |   |   |   |   |\n+   +---+   +---+---+---+---+---+---+   +---+   +---+   +---+   +\n|                   |                       |                   |\n+   +---+---+   +   +---+---+   +---+---+---+---+---+---+---+   +\n|   |       |   |   |       |   |   |       |       |           |\n+   +---+   +   +   +   +---+   +---+---+   +   +   +   +---+   +\n|       |   |   |   |   |               |   |   |   |   |       |\n+---+   +   +   +   +---+   +---+---+   +---+   +   +   +   +   +\n|   |   |   |       |   |   |       |   |   |       |   |   |   |\n+   +   +---+   +   +   +   +   +   +   +   +   +   +   +   +   +\n|   |   |       |   |   |   |           |   |   |   |   |   |   |\n+---+   +---+   +   +---+   +---+---+   +---+   +   +   +   +   +\n|       |   |   |   |   |               |   |   |   |   |       |\n+   +---+   +   +   +   +---+---+---+---+   +   +   +   +---+   +\n|   |       |       |           |           |       |           |\n+   +---+---+---+   +---+---+---+---+---+---+---+   +---+---+   +\n|               |                               |               |\n+   +---+---+   +   +---+   +---+---+   +---+   +---+---+---+   +\n|               |                               |   |       |   |\n+   +---+---+   +   +---+---+---+---+---+---+   +---+---+   +   +\n|   |   |   |       |           |           |           |   |   |\n+   +   +---+   +   +   +---+---+---+---+   +   +---+   +   +   +\n|   |   |       |   |   |               |   |           |   |   |\n+   +   +   +---+   +---+   +---+---+   +---+   +---+   +---+   +\n|   |   |                                       |   |           |\n+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+`,\n};\n\nconst Directions = [\n  \"North\",\n  \"NorthEast\",\n  \"East\",\n  \"SouthEast\",\n  \"South\",\n  \"SouthWest\",\n  \"West\",\n  \"NorthWest\",\n];\n\nexport const inputSchema: JSONSchema7 = {\n  type: \"object\",\n  title: \"Input\",\n  properties: {\n    config: {\n      type: \"object\",\n      properties: {\n        start: {\n          type: \"object\",\n          properties: {\n            x: {\n              type: \"integer\",\n            },\n            y: {\n              type: \"integer\",\n            },\n            direction: {\n              type: \"string\",\n              enum: Directions,\n            },\n          },\n          required: [\"x\", \"y\", \"direction\"],\n        },\n        return_goal: {\n          type: \"object\",\n          properties: {\n            x: {\n              type: \"integer\",\n            },\n            y: {\n              type: \"integer\",\n            },\n            direction: {\n              type: \"string\",\n              enum: Directions,\n            },\n          },\n          required: [\"x\", \"y\", \"direction\"],\n        },\n        goals: {\n          type: \"array\",\n          items: {\n            type: \"object\",\n            properties: {\n              x: {\n                type: \"integer\",\n              },\n              y: {\n                type: \"integer\",\n              },\n              direction: {\n                type: \"string\",\n                enum: Directions,\n              },\n            },\n            required: [\"x\", \"y\", \"direction\"],\n          },\n        },\n        search_initial_route: {\n          type: \"string\",\n          enum: [\"Init\"],\n        },\n        search_final_route: {\n          type: \"string\",\n          enum: [\"Final\"],\n        },\n        estimator_cut_off_frequency: {\n          type: \"number\",\n        },\n        period: {\n          type: \"number\",\n        },\n        translational_kp: {\n          type: \"number\",\n        },\n        translational_ki: {\n          type: \"number\",\n        },\n        translational_kd: {\n          type: \"number\",\n        },\n        translational_model_gain: {\n          type: \"number\",\n        },\n        translational_model_time_constant: {\n          type: \"number\",\n        },\n        rotational_kp: {\n          type: \"number\",\n        },\n        rotational_ki: {\n          type: \"number\",\n        },\n        rotational_kd: {\n          type: \"number\",\n        },\n        rotational_model_gain: {\n          type: \"number\",\n        },\n        rotational_model_time_constant: {\n          type: \"number\",\n        },\n        kx: {\n          type: \"number\",\n        },\n        kdx: {\n          type: \"number\",\n        },\n        ky: {\n          type: \"number\",\n        },\n        kdy: {\n          type: \"number\",\n        },\n        valid_control_lower_bound: {\n          type: \"number\",\n        },\n        low_zeta: {\n          type: \"number\",\n        },\n        low_b: {\n          type: \"number\",\n        },\n        fail_safe_distance: {\n          type: \"number\",\n        },\n        search_velocity: {\n          type: \"number\",\n        },\n        max_velocity: {\n          type: \"number\",\n        },\n        max_acceleration: {\n          type: \"number\",\n        },\n        max_jerk: {\n          type: \"number\",\n        },\n        spin_angular_velocity: {\n          type: \"number\",\n        },\n        spin_angular_acceleration: {\n          type: \"number\",\n        },\n        spin_angular_jerk: {\n          type: \"number\",\n        },\n        run_slalom_velocity: {\n          type: \"number\",\n        },\n      },\n      required: [\n        \"start\",\n        \"return_goal\",\n        \"goals\",\n        \"search_initial_route\",\n        \"search_final_route\",\n        \"estimator_cut_off_frequency\",\n        \"period\",\n        \"translational_kp\",\n        \"translational_ki\",\n        \"translational_kd\",\n        \"translational_model_gain\",\n        \"translational_model_time_constant\",\n        \"rotational_kp\",\n        \"rotational_ki\",\n        \"rotational_kd\",\n        \"rotational_model_gain\",\n        \"rotational_model_time_constant\",\n        \"kx\",\n        \"kdx\",\n        \"ky\",\n        \"kdy\",\n        \"valid_control_lower_bound\",\n        \"low_zeta\",\n        \"low_b\",\n        \"fail_safe_distance\",\n        \"search_velocity\",\n        \"max_velocity\",\n        \"max_acceleration\",\n        \"max_jerk\",\n        \"spin_angular_velocity\",\n        \"spin_angular_acceleration\",\n        \"spin_angular_jerk\",\n        \"run_slalom_velocity\",\n      ],\n    },\n    state: {\n      type: \"object\",\n      properties: {\n        current_node: {\n          type: \"object\",\n          properties: {\n            x: {\n              type: \"integer\",\n            },\n            y: {\n              type: \"integer\",\n            },\n            direction: {\n              type: \"string\",\n              enum: Directions,\n            },\n          },\n          required: [\"x\", \"y\", \"direction\"],\n        },\n        robot_state: {\n          type: \"object\",\n          properties: {\n            x: {\n              type: \"object\",\n              properties: {\n                x: {\n                  type: \"number\",\n                },\n                v: {\n                  type: \"integer\",\n                },\n                a: {\n                  type: \"integer\",\n                },\n                j: {\n                  type: \"integer\",\n                },\n              },\n              required: [\"x\", \"v\", \"a\", \"j\"],\n            },\n            y: {\n              type: \"object\",\n              properties: {\n                x: {\n                  type: \"number\",\n                },\n                v: {\n                  type: \"integer\",\n                },\n                a: {\n                  type: \"integer\",\n                },\n                j: {\n                  type: \"integer\",\n                },\n              },\n              required: [\"x\", \"v\", \"a\", \"j\"],\n            },\n            theta: {\n              type: \"object\",\n              properties: {\n                x: {\n                  type: \"number\",\n                },\n                v: {\n                  type: \"integer\",\n                },\n                a: {\n                  type: \"integer\",\n                },\n                j: {\n                  type: \"integer\",\n                },\n              },\n              required: [\"x\", \"v\", \"a\", \"j\"],\n            },\n          },\n          required: [\"x\", \"y\", \"theta\"],\n        },\n      },\n      required: [\"current_node\", \"robot_state\"],\n    },\n    maze_string: {\n      type: \"string\",\n    },\n  },\n  required: [\"config\", \"state\", \"maze_string\"],\n};\n\nfunction CustomTextareaWidget(props: WidgetProps) {\n  return (\n    <TextareaAutosize\n      defaultValue={props.value}\n      style={{ width: \"100%\" }}\n      onChange={(event) => props.onChange(event.target.value)}\n    />\n  );\n}\n\nfunction CustomTextWidget(props: WidgetProps) {\n  return (\n    <TextField\n      defaultValue={props.value}\n      onChange={(event) => props.onChange(event.target.value)}\n    />\n  );\n}\n\nfunction CustomSelectWidget(props: WidgetProps) {\n  return (\n    <Select\n      defaultValue={props.value}\n      onChange={(event) => props.onChange(event.target.value)}\n    >\n      {(props.options.enumOptions as any).map(\n        ({ value, label }: any, i: number) => {\n          return (\n            <MenuItem key={i} value={value}>\n              {label}\n            </MenuItem>\n          );\n        }\n      )}\n    </Select>\n  );\n}\n\nfunction FieldTemplate(props: FieldTemplateProps) {\n  return (\n    <TreeItem nodeId={props.id} label={props.label}>\n      {props.children}\n    </TreeItem>\n  );\n}\n\nfunction ObjectFieldTemplate(props: ObjectFieldTemplateProps) {\n  return <div>{props.properties.map((prop) => prop.content)}</div>;\n}\n\nfunction ArrayFieldTemplate(props: ArrayFieldTemplateProps) {\n  return (\n    <div>\n      {props.items &&\n        props.items.map((p: any) => {\n          return (\n            <Grid container key={p.key} direction=\"row\" alignItems=\"center\">\n              <Grid item xs={8}>\n                {p.children}\n              </Grid>\n              <Grid item xs={4}>\n                <IconButton tabIndex={-1} onClick={p.onDropIndexClick(p.index)}>\n                  <Delete />\n                </IconButton>\n              </Grid>\n            </Grid>\n          );\n        })}\n      <IconButton onClick={props.onAddClick}>\n        <Add />\n      </IconButton>\n    </div>\n  );\n}\n\nconst widgets = {\n  TextareaWidget: CustomTextareaWidget,\n  TextWidget: CustomTextWidget,\n  SelectWidget: CustomSelectWidget,\n};\n\nconst uiSchema = {\n  maze_string: {\n    \"ui:widget\": \"textarea\",\n  },\n};\n\ninterface Props {\n  input: Input;\n  onSubmit: (e: ISubmitEvent<Input>) => void;\n}\n\nexport function InputForm(props: Props) {\n  return (\n    <TreeView\n      defaultCollapseIcon={<ExpandMore />}\n      defaultExpandIcon={<ChevronRight />}\n    >\n      <Form\n        schema={inputSchema}\n        formData={props.input}\n        uiSchema={uiSchema}\n        widgets={widgets}\n        onSubmit={props.onSubmit}\n        FieldTemplate={FieldTemplate}\n        ObjectFieldTemplate={ObjectFieldTemplate}\n        ArrayFieldTemplate={ArrayFieldTemplate}\n      />\n    </TreeView>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Canvas from \"./Canvas\";\nimport fetchResult, { Result } from \"./fetch\";\nimport { defaultInput, InputForm } from \"./input\";\nimport Loader from \"react-loader\";\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport {\n  Drawer,\n  Container,\n  Grid,\n  Slider,\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  Menu,\n  ChevronLeft,\n  ChevronRight,\n  PlayArrow,\n  Stop,\n  FastForward,\n  FastRewind,\n  Replay,\n} from \"@material-ui/icons\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  })\n);\n\nexport default function App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [input, setInput] = useState(defaultInput);\n\n  const [value, setValue] = useState(0.0);\n  const [isPlaying, setPlaying] = useState(false);\n\n  const [result, setResult] = useState<Array<Result>>([]);\n\n  const speeds = [0.25, 0.5, 0.75, 1.0, 2.0, 3.0, 4.0, 8.0];\n\n  const [speedIndex, setSpeedIndex] = useState(3);\n\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (isPlaying && result.length > 0) {\n        setValue((value) =>\n          Math.min(\n            value + (100.0 / result.length) * 50.0 * speeds[speedIndex],\n            100.0\n          )\n        );\n      }\n    }, 50);\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n        color=\"inherit\"\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Menu />\n          </IconButton>\n          <Container maxWidth=\"xs\">\n            <Typography variant=\"h6\" noWrap>\n              Micromouse Simulator\n            </Typography>\n          </Container>\n          <Container maxWidth=\"xl\">\n            <Grid container spacing={2}>\n              <Grid item xs={10}>\n                <Slider\n                  value={value}\n                  onChange={(_event, newValue) => {\n                    setValue(newValue as number);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={2}>\n                <Typography variant=\"body1\">× {speeds[speedIndex]}</Typography>\n              </Grid>\n            </Grid>\n          </Container>\n          <Container maxWidth=\"xs\">\n            <IconButton\n              onClick={() => {\n                if (speedIndex > 0) {\n                  setSpeedIndex(speedIndex - 1);\n                }\n              }}\n            >\n              <FastRewind />\n            </IconButton>\n            <IconButton color=\"secondary\" onClick={() => setPlaying(false)}>\n              <Stop />\n            </IconButton>\n            <IconButton color=\"primary\" onClick={() => setPlaying(true)}>\n              <PlayArrow />\n            </IconButton>\n            <IconButton\n              onClick={() => {\n                if (speedIndex + 1 < speeds.length) {\n                  setSpeedIndex(speedIndex + 1);\n                }\n              }}\n            >\n              <FastForward />\n            </IconButton>\n            <IconButton\n              onClick={() => {\n                setValue(0);\n              }}\n            >\n              <Replay />\n            </IconButton>\n          </Container>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n        </div>\n        <InputForm\n          input={input}\n          onSubmit={(event) => {\n            setLoading(true);\n            setInput(event.formData);\n            fetchResult(event.formData)\n              .then((res) => {\n                setResult(res);\n                setValue(0);\n                setLoading(false);\n              })\n              .catch((error) => {\n                setLoading(false);\n                console.log(error);\n              });\n          }}\n        />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Grid container alignItems=\"center\" justify=\"center\">\n          <Grid item xs={8}>\n            <Loader loaded={!isLoading} zIndex={1600} />\n            <Canvas\n              mazeString={input.maze_string}\n              setMazeString={(newMazeString) => {\n                setInput({\n                  ...input,\n                  maze_string: newMazeString,\n                });\n              }}\n              results={result}\n              value={value}\n            />\n          </Grid>\n        </Grid>\n      </main>\n    </div>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}